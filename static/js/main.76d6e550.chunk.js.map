{"version":3,"sources":["DisplayArea.jsx","theme.js","FilterYear.jsx","FilterGenre.jsx","FilterText.jsx","Filters.jsx","App.js","useData.js","reportWebVitals.js","index.js"],"names":["DisplayArea","items","searchText","processText","text","split","RegExp","join","length","Grid","container","spacing","p","map","image_url","title","id","artist","genre","release_year","item","xs","sm","md","Card","CardMedia","component","height","width","image","alt","CardContent","Typography","variant","dangerouslySetInnerHTML","__html","sx","background","Box","padding","display","gap","Chip","label","flexDirection","justifyContent","alignItems","Warning","color","fontSize","propTyes","array","isRequired","string","createTheme","palette","mode","FilterYear","setFilters","yearList","useState","year","setYear","useEffect","filters","FormControl","fullWidth","InputLabel","Select","value","defaultValue","onChange","event","target","MenuItem","FilterGenre","genreList","setGenre","multiple","input","OutlinedInput","renderValue","selected","find","name","FilterText","handleChange","useMemo","throttle","search","leading","trailing","TextField","InputProps","endAdornment","InputAdornment","position","Search","Filters","fullPageStyles","App","data","setData","loading","setLoading","error","setError","a","fetch","response","json","videos","video","genres","genre_id","fetchData","useData","searchRef","useRef","current","Fuse","keys","threshold","results","filter","includes","years","unique","Set","Array","from","sort","b","theme","CssBaseline","CircularProgress","size","disableShrink","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","debug"],"mappings":"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","file":"static/js/main.76d6e550.chunk.js","sourcesContent":["import { array, string } from \"prop-types\";\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Chip,\n  Grid,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Warning } from \"@mui/icons-material\";\n\nexport function DisplayArea({ items, searchText }) {\n  function processText(text) {\n    if (searchText) {\n      return text\n        .split(new RegExp(searchText, \"ig\"))\n        .join(`<span>${searchText}</span>`);\n    }\n\n    return text;\n  }\n\n  if (!items?.length) {\n    return (\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n\n        }}\n      >\n        <Warning color=\"warning\" sx={{ fontSize: \"128px\" }} />\n        <Typography>\n          No results found!\n        </Typography>\n        <Typography>Try changing the filters.</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Grid container spacing={2} p={2}>\n      {items?.map(({ image_url, title, id, artist, genre, release_year }) => (\n        <Grid item xs={12} sm={4} md={3} key={id}>\n          <Card>\n            <CardMedia\n              component=\"img\"\n              height=\"140\"\n              width=\"200\"\n              image={image_url}\n              alt={title}\n            />\n            <CardContent>\n              <Typography\n                variant=\"h6\"\n                dangerouslySetInnerHTML={{\n                  __html: processText(title),\n                }}\n                sx={{ \"& span\": { background: \"red\" } }}\n              />\n              <Typography\n                variant=\"subtitle1\"\n                dangerouslySetInnerHTML={{\n                  __html: processText(artist),\n                }}\n                sx={{ \"& span\": { background: \"red\" } }}\n              />\n            </CardContent>\n            <Box sx={{ padding: \"8px\", display: \"flex\", gap: 0.5 }}>\n              {genre && <Chip label={genre} />}\n              <Chip label={release_year} />\n            </Box>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nDisplayArea.propTyes = {\n  items: array.isRequired,\n  searchText: string,\n};\n","import { createTheme } from \"@mui/material/styles\";\n\nexport default createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n","import { useEffect, useState } from \"react\";\nimport { func, array } from \"prop-types\";\nimport { FormControl, Grid, InputLabel, MenuItem, Select } from \"@mui/material\";\n\nexport default function FilterYear({ setFilters, yearList }) {\n  const [year, setYear] = useState();\n\n  useEffect(() => {\n    if (year) {\n      setFilters((filters) => ({\n        ...filters,\n        year,\n      }));\n    }\n  }, [year, setFilters]);\n\n  function handleSelect(event) {\n    setYear(event?.target?.value);\n  }\n\n  return (\n    <Grid item xs={12} sm={6}>\n      <FormControl fullWidth>\n        <InputLabel>Year</InputLabel>\n        <Select\n          label=\"Year\"\n          value={year}\n          defaultValue=\"\"\n          onChange={handleSelect}\n        >\n          {yearList?.map((year) => (\n            <MenuItem value={year} key={year}>\n              {year}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Grid>\n  );\n}\n\nFilterYear.propTypes = {\n  setFilters: func.isRequired,\n  yearList: array,\n};\n","import { useEffect, useState } from \"react\";\nimport { array, func } from \"prop-types\";\nimport {\n  Chip,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Select,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nexport default function FilterGenre({ setFilters, genreList }) {\n  const [genre, setGenre] = useState([]);\n\n  useEffect(() => {\n    if (genre?.length) {\n      setFilters((filters) => ({\n        ...filters,\n        genre,\n      }));\n    }\n  }, [genre, setFilters]);\n\n  function handleSelect(event) {\n    setGenre(event?.target?.value);\n  }\n\n  return (\n    <Grid item xs={12} sm={6}>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-multiple-chip-label\">Genre</InputLabel>\n        <Select\n          multiple\n          value={genre}\n          defaultValue=\"\"\n          onChange={handleSelect}\n          input={<OutlinedInput label=\"Chip\" />}\n          renderValue={(selected) => (\n            <Box sx={{ display: \"flex\", gap: 0.5 }}>\n              {selected.map((selected) => (\n                <Chip\n                  key={selected}\n                  label={genreList?.find(({ id }) => id === selected)?.name}\n                />\n              ))}\n            </Box>\n          )}\n        >\n          {genreList?.map(({ name, id }) => (\n            <MenuItem key={id} value={id}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Grid>\n  );\n}\n\nFilterGenre.propTypes = {\n  setFilters: func.isRequired,\n  genreList: array,\n};\n","import { func } from \"prop-types\";\nimport { Grid, InputAdornment, TextField } from \"@mui/material\";\nimport { Search } from \"@mui/icons-material\";\nimport { useMemo } from \"react\";\nimport { throttle } from \"lodash\";\n\nexport default function FilterText({ setFilters }) {\n  const handleChange = useMemo(\n    () =>\n      throttle(function handleChange(event) {\n        setFilters((filters) => ({\n          ...filters,\n          search: event?.target?.value,\n        }));\n      }, 500, { leading: false, trailing: true}),\n    [setFilters]\n  );\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n        fullWidth\n        label=\"Search\"\n        onChange={handleChange}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <Search />\n            </InputAdornment>\n          ),\n        }}\n      />\n    </Grid>\n  );\n}\n\nFilterText.propTypes = {\n  setFilters: func.isRequired,\n};\n","import { array, func } from \"prop-types\";\nimport { Grid } from \"@mui/material\";\n\nimport FilterYear from \"./FilterYear\";\nimport FilterGenre from \"./FilterGenre\";\nimport FilterText from \"./FilterText\";\n\nexport default function Filters({ setFilters, yearList, genreList }) {\n  return (\n    <Grid container spacing={2} p={2}>\n      <FilterText setFilters={setFilters} />\n      <FilterYear setFilters={setFilters} yearList={yearList} />\n      <FilterGenre setFilters={setFilters} genreList={genreList} />\n    </Grid>\n  );\n}\n\nFilters.propTypes = {\n  setFilters: func.isRequired,\n  yearList: array,\n  genreList: array,\n};\n","import { useEffect, useMemo, useRef, useState } from \"react\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport { CircularProgress, CssBaseline, Typography } from \"@mui/material\";\nimport Fuse from \"fuse.js\";\n\nimport { DisplayArea } from \"./DisplayArea\";\n\nimport useData from \"./useData\";\n\nimport theme from \"./theme\";\nimport Filters from \"./Filters\";\nimport { Box } from \"@mui/system\";\nimport { Warning } from \"@mui/icons-material\";\n\nconst fullPageStyles = {\n  height: \"100vh\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n\nexport default function App() {\n  const [filters, setFilters] = useState({\n    search: \"\",\n    year: null,\n    genre: [],\n  });\n\n  const { data, loading, error } = useData();\n\n  const searchRef = useRef();\n\n  useEffect(() => {\n    if (data) {\n      searchRef.current = new Fuse(data.videos, {\n        keys: [\"artist\", \"title\"],\n        threshold: 0.1,\n      });\n    }\n  }, [data]);\n\n  const results = useMemo(() => {\n    if (data) {\n      let results = data?.videos;\n      if (filters.search && searchRef.current) {\n        results = searchRef.current\n          .search(filters.search)\n          .map(({ item }) => item);\n      }\n\n      if (filters.year) {\n        results = results.filter(\n          ({ release_year }) => filters.year === release_year\n        );\n      }\n\n      if (filters.genre.length) {\n        results = results.filter(({ genre_id }) =>\n          filters.genre.includes(genre_id)\n        );\n      }\n\n      return results;\n    }\n  }, [data, searchRef, filters]);\n\n  const yearList = useMemo(\n    function getYears() {\n      const years = data?.videos?.map(({ release_year }) => release_year);\n      const unique = new Set(years);\n\n      return Array.from(unique).sort((a, b) => b - a);\n    },\n    [data]\n  );\n\n  if (loading) {\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Box sx={fullPageStyles}>\n          <CircularProgress size={100} disableShrink />\n        </Box>\n      </ThemeProvider>\n    );\n  }\n\n  if (error) {\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Box sx={fullPageStyles}>\n          <Warning color=\"error\" sx={{ fontSize: \"128px\" }} />\n          <Typography variant=\"h1\" textAlign=\"center\">\n            Oh, no!\n          </Typography>\n          <Typography>Something went wrong!</Typography>\n        </Box>\n      </ThemeProvider>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div>\n        <Typography variant=\"h1\" textAlign=\"center\">\n          Music Videos\n        </Typography>\n        <Filters\n          setFilters={setFilters}\n          yearList={yearList}\n          genreList={data?.genres}\n        />\n        <DisplayArea items={results} searchText={filters.search} />\n      </div>\n    </ThemeProvider>\n  );\n}\n","import { useEffect, useState } from \"react\"\n\nexport default function useData() {\n  const [data, setData] = useState()\n  const [loading, setLoading] = useState()\n  const [error, setError] = useState()\n\n  useEffect(() => {\n    async function fetchData() {\n      const url = 'https://raw.githubusercontent.com/XiteTV/frontend-coding-exercise/main/data/dataset.json'\n      try {\n        const response = await fetch(url)\n        const data = await response.json()\n        setData({\n          ...data,\n          videos: data.videos.map(video => {\n            return {\n              ...video,\n              genre: data.genres.find(({ id }) => id === video.genre_id)?.name\n            }\n          })\n        })\n      } catch (error) {\n        setError(error)\n      }\n      setLoading(false)\n    }\n\n    setLoading(true)\n    fetchData()\n  }, [])\n\n  return {data, loading, error}\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals(console.debug);\n"],"sourceRoot":""}